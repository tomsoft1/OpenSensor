
<% widget=locals[:widget] %>
<% if widget.sensor %>
<div id="container_<%= widget.id -%>" style="min-width: 130px; height: <%= 140*widget.size_y-20 -%>px; margin: 0 auto">

<script>
$(function () {
    var tmp=Widget.widgets["<%= widget.id %>"];
    tmp.sensor_idx=JSON.parse('<%= raw([widget.sensor.id,widget.sensor2,widget.sensor3].as_json) -%>');
    tmp.options={
            chart:{
                renderTo:'container_<%= widget.id -%>',
                type:'<%= widget.charttype.downcase -%>'
            },
            title:{
                text:null
            },
            xAxis:{
                type: 'datetime',
                dateTimeLabelFormats: { // don't display the dummy year
                    month: '%e. %b',
                    year: '%b'
                },
                title: {
                    text: 'Date'
                }
            },
            yAxis: {
                title: {
                    text: '<%= widget.sensor.name -%>'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                valueSuffix: ''
            },
            legend: {
                enabled:false,
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                borderWidth: 0
            },
            series: [
            <% [widget.sensor.id,widget.sensor2,widget.sensor3].each do |sensor_id| %>
            <% if sensor_id && sensor_id!="" %>
            <%   sensor=Sensor.find(sensor_id) %>
              {
                id:"<%= sensor.id %>",
                name: '<%= sensor.name -%>',
                marker : {
                    radius : 1
                },
                data: [<%= raw(sensor.measures.desc(:timeStamp)[0..100].reverse.each.map{
                            |v| "[ (new Date(#{v.timeStamp.to_i*1000})).getTime(),#{v.value}]"}.join(',')) -%>]
            },
            <% end %>
            <% end %>
            ]
        };
//    tmp.chart=$('#container_<%= widget.id -%>').highcharts(tmp.options);
       tmp.chart=new Highcharts.Chart(tmp.options);
    });
    
{
    var tmp=Widget.widgets["<%= widget.id %>"];
    tmp.on_update=function(message){
        console.log("on update: multichart");
        var idx=this.sensor_idx.indexOf(message.data.sensor_id);
        console.log("Index:"+idx);
        var toAdd=[new Date(message.data.timeStamp).getTime(),message.data.value];
        console.log(toAdd);
        this.chart.series[this.sensor_idx.indexOf(message.data.sensor_id)].addPoint(toAdd,true,true)
    }
    tmp.on_resize=function(message,widget){
        console.log("one resize");
        var height=$("#widget_<%= widget.id -%>").height();
        console.log(height);
        $("#container_<%= widget.id -%>").height(height-20);
        this.chart.reflow();
        console.log(this.chart);
    }
    tmp_<%= widget.id -%>=tmp;
}

 </script>
 <% else %>
 Widget not linked to a sensor 
 <% end %>