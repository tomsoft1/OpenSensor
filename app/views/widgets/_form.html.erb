<%= form_for(@widget,:role=>"form") do |f| %>
  <% if @widget.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@widget.errors.count, "error") %> prohibited this widget from being saved:</h2>

      <ul>
      <% @widget.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
    <H3>Type:<%= "#{@widget.type}" %></H3>
    <%= f.hidden_field :dashboard_id %>
    <%= f.hidden_field :type %>

    <div class="field">
    <%= f.label :name %><br />
    <%= f.text_field :name %>
  </div>
  <div class="field">
    <%= f.label :color %><br />
    <%= f.select(:color,options_for_select(%w(white gray yellow red green blue pink black),:selected => @widget.color)) %>
  </div>

    <div class="field">
    <%= f.label :sensor %><br />
    <%= f.select(:sensor_id,options_for_select(@widget.dashboard.user.sensors.map{|s|[s.name,s.id]},:selected => @widget.sensor_id)) %>
  </div>
<% if @widget.get_prototype %>
<% @widget.ensure_params %>
<% @widget.get_prototype.parameter_def.each do |param| %>
    <div class="field">
    <%= f.label param.name_param.to_sym %><br />
    <% case param.class.to_s  %>
    <% when ParameterEnum.to_s %>
    <%=       f.select(param.name_param.to_sym,options_for_select(param.values,:selected => @widget[param.name_param])) %>
    <% when ParameterSensor.to_s %>
    <% map=@widget.dashboard.user.sensors.map{|s|[s.name,s.id]} 
       if param.can_be_empty then map=[["NONE",nil]]+ map end %>
    <%=       f.select(param.name_param.to_sym,options_for_select(map,:selected => @widget[param.name_param])) %>
    <% else %>
    <%=       f.text_field param.name_param.to_sym %>  
    <% end %>
  </div>

<% end %>

<% end %>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
